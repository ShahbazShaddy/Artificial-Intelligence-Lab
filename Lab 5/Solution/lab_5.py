# -*- coding: utf-8 -*-
"""Lab 5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1txlYasp2ny-7u3qIPmoGCJKqU6vug0y_
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt



"""##**Case Study 1: Weather Data Analysis**"""

np.random.seed(0)
data = {'Date': pd.date_range(start='2022-01-01', end='2022-12-31'),'Temperature': np.random.uniform(10, 40, 365), 'Humidity': np.random.uniform(30, 90, 365),'Wind Speed': np.random.uniform(0, 20, 365), 'Weather Condition': np.random.choice(['Sunny', 'Rainy', 'Cloudy'], 365)}
df = pd.DataFrame(data)
print(df.head())

array = df['Temperature'].to_numpy()
print("Mean Temperature:", np.mean(array))
print("Median Temperature:", np.median(array))
print("Standard Deviation of Temperature:", np.std(array))

sunnyDays=df[(df['Temperature']>30) & (df['Weather Condition']=='Sunny')]
print("Number of sunny days with temperature above 30°C:",len(sunnyDays))

avgHumidity=df.groupby('Weather Condition')['Humidity'].mean()
print(avgHumidity)

plt.plot(df['Date'],df['Temperature'])
plt.xlabel('Date')
plt.ylabel('Temperature (°C)')
plt.title('Temperature Variation Over the Year')
plt.show()

weather_counts=df['Weather Condition'].value_counts()
plt.bar(weather_counts.index, weather_counts.values)
plt.xlabel('Weather Condition')
plt.ylabel('Number of Days')
plt.title('Number of Days by Weather Condition')
plt.show()

"""##**Case Study 2: Sales Data Analysis**"""

from datetime import datetime, timedelta

np.random.seed(0)
products = ['SufiGold', 'Chamak', 'PakRang', 'ZaiqaBazaar', 'RahatHerbals', 'DilSay', 'Shaan-e-Watan', 'Meherbani', 'Noor-e-Sehat', 'Sheherbano']
data = {
    'Order ID': range(1, 501),
    'Product': [np.random.choice(products) for _ in range(500)],
    'Price': np.random.uniform(10, 1000, 500),
    'Quantity': np.random.randint(1, 21, 500),
    'Date of Purchase': [datetime.now() - timedelta(days=np.random.uniform(0, 365)) for _ in range(500)]
}
df = pd.DataFrame(data)
print(df.head())

price_array = df['Price'].to_numpy()
quantity_array = df['Quantity'].to_numpy()
total_sales = price_array * quantity_array
df['Total Sales'] = total_sales
print(df.head())

greater_then_100 = df[df['Total Sales'] > 100]
print(greater_then_100)

product_quantities=df.groupby('Product')['Quantity'].sum()
print("Total quantity sold for each product:")
print(product_quantities)

plt.scatter(df['Price'], df['Quantity'])
plt.xlabel('Price ($)')
plt.ylabel('Quantity')
plt.title('Relationship between Price and Quantity')
plt.show()

plt.hist(df['Total Sales'], bins=20)
plt.xlabel('Total Sales ($)')
plt.ylabel('Frequency')
plt.title('Distribution of Total Sales Values')
plt.show()

"""##**Case Study 3: Employee Salary Analysis**"""

np.random.seed(0)

names = ['John', 'Emily', 'Michael', 'Sarah', 'William', 'Olivia', 'James', 'Ava', 'George', 'Isabella', 'Charles', 'Mia', 'Thomas', 'Charlotte', 'Robert', 'Amelia', 'Richard', 'Harper', 'Joseph', 'Evelyn']
departments = ['Sales', 'Marketing', 'IT', 'Finance', 'HR']
data = {'Employee ID': range(1, 301),'Name': [np.random.choice(names) for _ in range(300)],'Department': [np.random.choice(departments) for _ in range(300)],'Salary': np.random.uniform(30000, 120000, 300),'Years of Experience': np.random.randint(1, 26, 300)
}
df = pd.DataFrame(data)
print(df.head())

salary_array = df['Salary'].to_numpy()
print("Average Salary: $", np.mean(salary_array))
print("Maximum Salary: $", np.max(salary_array))
print("Minimum Salary: $", np.min(salary_array))

avg_salary = np.mean(salary_array)
experienced_employees = df[(df['Years of Experience'] > 5) & (df['Salary'] > avg_salary)]
print("Employees with more than 5 years of experience and salary above average:")
print(experienced_employees)

mean_salary=df.groupby('Department')['Salary'].mean()
print("Mean salary:")
print(mean_salary)

mean_salary.plot(kind='bar')
plt.xlabel('Department')
plt.ylabel('Mean Salary ($)')
plt.title('Mean Salary by Department')
plt.show()

plt.plot(df['Years of Experience'],df['Salary'], marker='o')
plt.xlabel('Years of Experience')
plt.ylabel('Salary ($)')
plt.title('Salary Distribution by Years of Experience')
plt.show()

"""##**Case Study 4: Exam Score Analysis**"""

subjects = ['Math', 'Science', 'English', 'History', 'Geography']
data = {'Student ID': np.random.randint(1000, 9999, 200),'Name': [f'Student {i}' for i in range(1, 201)],'Subject': np.random.choice(subjects, 200),'Score': np.random.randint(0, 101, 200),'Total Marks': [100] * 200}
df = pd.DataFrame(data)
print(df.head())

mean_score=np.mean(df['Score'])
median_score=np.median(df['Score'])
std_dev_score=np.std(df['Score'])

print(f'Mean Score: {mean_score:.2f}')
print(f'Median Score: {median_score:.2f}')
print(f'Standard Deviation: {std_dev_score:.2f}')

high_scores=df[df['Score']>80]

print(f'Number of students who scored above 80%: {len(high_scores)}')

avg_scores_by_subject = df.groupby('Subject')['Score'].mean()
print(avg_scores_by_subject)

plt.hist(df['Score'], bins=20, edgecolor='black')
plt.xlabel('Score')
plt.ylabel('Frequency')
plt.title('Distribution of Scores')
plt.show()

avg_scores_by_subject.plot(kind='bar')
plt.xlabel('Subject')
plt.ylabel('Average Score')
plt.title('Average Scores by Subject')
plt.show()



"""##**Case Study 5: Stock Market Analysis**"""

from datetime import datetime, timedelta

companies=['Apple','Google','Microsoft','Amazon','Facebook']
start_date = datetime.today()-timedelta(days=730)
dates=[start_date + timedelta(days=i) for i in range(1000)]
data = {'Date': dates,'Company': np.random.choice(companies, 1000),'Open Price': np.random.uniform(50, 500, 1000),'Close Price': np.random.uniform(50, 500, 1000),'Volume Traded': np.random.randint(1000, 1000000, 1000)}
df = pd.DataFrame(data)
print(df.head())

close_prices = df['Close Price'].values
df['Daily % Change'] = np.insert(np.diff(close_prices) / close_prices[:-1] * 100, 0, 0)
print(df[['Date', 'Close Price', 'Daily % Change']].head())

df_increased = df[df['Daily % Change'] > 2]
print(df_increased.head())

total_volume_traded = df.groupby('Company')['Volume Traded'].sum()
print(total_volume_traded)

company_a_data = df[df['Company'] == 'Apple']
plt.plot(company_a_data['Date'], company_a_data['Close Price'], label='Apple')
plt.title('Close Price Trend for Apple')
plt.xlabel('Date')
plt.ylabel('Close Price')
plt.xticks(rotation=45)
plt.legend()
plt.tight_layout()
plt.show()

avg_pct_change = df.groupby('Company')['Daily % Change'].mean()
avg_pct_change.plot(kind='bar', color='skyblue')
plt.title('Average Percentage Change in Close Price by Company')
plt.xlabel('Company')
plt.ylabel('Average Daily % Change')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()